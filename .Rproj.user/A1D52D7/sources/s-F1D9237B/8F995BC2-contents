library(rJava)  
library(DBI)  
library(RJDBC)  
library(XML)  
library(memoise)  
library(KoNLP)  
library(wordcloud)  
library(dplyr)  
library(ggplot2)  
library(ggmap)  
library(rvest)  
library(RColorBrewer)  
library(data.table)  
library(reshape)

#######################################################
## 문제 1. class_scores.csv을 데이터프레임으로 전환하시오
# 데이터프레임의 이름은 다음과 같이 하시오.
# scores
# R에서는 기본적으로 데이터파일안에 들어있는 문자열(Strings)를
# 요인(Factor)로 취급하는 것이 기본이다. 만약 요인으로 설정하지 않고
# 불러오고 싶다면 readCSV()함수내에 stringsAsFactors=FALSE; 를 추가한다.
#######################################################
scores<-data.frame(read.csv("class_scores.csv"))
## Stu_ID
## grade
## class
## gender
## Math
## English
## Science
## Marketing
## Writing

#######################################################
## 문제 2. scores을 분석하시오
#######################################################
str(scores)
# 'data.frame':	600 obs. of  9 variables:
#   $ Stu_ID   : int  10101 10102 10103 10104 10105 10106 10107 10108 10109 10110 ...
# $ grade    : int  1 1 1 1 1 1 1 1 1 1 ...
# $ class    : Factor w/ 5 levels "A","B","C","D",..: 1 1 1 1 1 1 1 1 1 1 ...
# $ gender   : Factor w/ 2 levels "F","M": 2 2 1 1 1 2 2 1 2 2 ...
# $ Math     : int  55 29 28 45 28 86 47 80 30 94 ...
# $ English  : int  84 94 80 74 69 51 52 67 32 39 ...
# $ Science  : int  50 41 68 48 57 68 98 98 74 90 ...
# $ Marketing: int  40 87 41 88 91 59 81 85 86 67 ...
# $ Writing  : int  59 57 100 75 66 92 79 90 52 28 ...
head(scores)
tail(scores)
summary(scores)
dim(scores)
View(scores)
#######################################################
## 문제 3. scores 의 컬럼명을 한글로 전환하시오
## 학번= Stu_ID
## 학년 = grade
## 등급 = class
## 성별 = gender
## 수학 = Math
## 영어 = English
## 과학 = Science
## 마케팅 = Marketing
## 작문 = Writing
head(scores)
#######################################################
scores<-scores%>% 
  dplyr::rename(학번=Stu_ID,
                  학년=grade,
                  등급=class,
                  성별=gender,
                  수학 = Math,
                  영어 = English,
                  과학 = Science,
                  마케팅 = Marketing,
                  작문 = Writing)

head(scores)
#######################################################
## 문제 4. 1학년 학생들을 학번,이름, 성별을 출력하시오. 단, 내림차순 정렬
#######################################################
scores<-scores %>% 
  dplyr::filter(grade==1) %>% 
  dplyr::select(Stu_ID,grade,gender) %>% 
  dplyr::arrange(desc(Stu_ID))


#######################################################
## 문제 5. 1학년 남학생만 보기
#######################################################
scores %>% 
  dplyr::filter(학년==1,성별=="M") %>% 
#######################################################
## 문제 6. 1학년이 아닌 학생들 중 학번이
## 가장 빠른 번호 3개만 보기
## !grade == 1
## top_n(n=3,wt=학생아이디)
## n은 상위 3개, wt 는 내림차순 기준,동점자는 같이 출력 
#######################################################
scores %>% 
  dplyr::filter(!학년==1) %>% 
  dplyr::arrange(학번) %>% 
  dplyr::top_n(n=3,wt=수학)

#######################################################
## 문제 7. 1, 2학년 학생들을 학년,학번 순으
## grade == 1 | grade == 2
## arrange(학년,학번)
## tail 은 하단부분 6개만 보여줌
#######################################################
scores %>% 
  dplyr::filter(학년==1 | 학년==2) %>% 
  dplyr::arrange(학년,학번) %>% 
  tail
#######################################################
## 문제 8. 수학,영어,과학,마케팅,작문 과목의
## 평균을 나타내는 컬럼을 추가한 후
## 평균점수가 80이상인 학번과 평ㄱ학생들을 출력하시오.
## 단 평균내림차순, 학번오름차순으로 정렬하시오.
## mutate(평균 = (수학+영어+과학+마케팅+작문) %/% 5)
## 평균 >= 80
## getter, setter 개념설명
#######################################################
scores %>% 
  dplyr::mutate(평균=(수학+영어+과학+마케팅+작문)%/%5)
scores %>% 
  dplyr::filter(평균>=80) %>% 
  dplyr::select(학번,평균) %>% 
  dplyr::arrange(desc(평균),학번)
#######################################################
## 문제 9. 학생들 중 한 과목이라도 100점이 있는
## 학생만 보기
## ※ | 를 연속사용하기
#######################################################
scores %>% 
  dplyr::filter(수학==100|영어==100|과학==100|마케팅==100|작문==100) %>% 
  head

#######################################################
## 문제 10. 학번이 홀수인 학생들 중 남자이면서
## 수학과 과학이 모두 90점 이상인
## 학생들을 학번 오름차순으로 정렬
#######################################################
scores %>% 
  dplyr::filter(학번%%2==1,수학>=90,과학>=90) %>% 
  dplyr::arrange(학번)
  head